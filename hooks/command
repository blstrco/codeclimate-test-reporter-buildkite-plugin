#!/bin/bash

set -euo pipefail

install_reporter() {
  if [[ -z "$(which cc-test-reporter)" ]] ; then
    printf -- "--- :codeclimate: Installing cc-test-reporter\\n"

    curl --location --silent \
      "https://codeclimate.com/downloads/test-reporter/test-reporter-$(${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_VERSION})-linux-amd64" > /usr/bin/cc-test-reporter
    chmod +x /usr/bin/cc-test-reporter
  fi
}

report_coverage() {
  buildkite-agent artifact download "${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_ARTIFACT}" ./

  printf -- "--- :codeclimate: reporting coverage\\n"
  $(which cc-test-reporter) format-coverage \
    --input-type "${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_INPUT_TYPE}" \
    --prefix "${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_PREFIX}" \
    --output "coverage/codeclimate.json" \
    "${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_ARTIFACT}"

  $(which cc-test-reporter) upload-coverage
}

if [[ -z "${BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_VERSION:-}" ]] ; then
  BUILDKITE_PLUGIN_CODECLIMATE_TEST_REPORTER_VERSION="latest"
fi

directory=$(mktemp --directory)
pushd "$directory"

install_reporter
report_coverage

popd
rm --recursive "$directory"
